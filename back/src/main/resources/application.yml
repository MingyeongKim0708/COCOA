server:
  address: 0.0.0.0
client:
  url: ${CLIENT_BASE_URL}
spring:
  application:
    name: back
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: false
    database: postgresql
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: Kakao
            client-id: ${OAUTH2_KAKAO_CLIENT_ID}
            client-secret: ${OAUTH2_KAKAO_CLIENT_SECRET}
            redirect-uri: ${SERVER_BASE_URL}/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  jwt:
    secret: ${SPRING_JWT_SECRET}
    accesstoken-expires-in: ${SPRING_ACCESSTOKEN_EXPIRES_IN}
    refreshtoken-expires-in: ${SPRING_REFRESHTOKEN_EXPIRES_IN}
logging:
  level:
    root: info
    org.springframework: warn
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.security.oauth2.client.endpoint.DefaultAuthorizationCodeTokenResponseClient: DEBUG
    org.springframework.web.reactive.function.client: DEBUG
    reactor.netty.http.client: DEBUG
    com.cocoa.backend: DEBUG
reactor:
  netty:
    http:
      client:
        wiretap: true
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

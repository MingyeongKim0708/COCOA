version: '3.8'
services:
  back:
    build: ./back
    container_name: back
    ports:
      - "8080:8080"
    restart: always
    env_file:
      - .env
    environment:
      TZ: Asia/Seoul
    depends_on:
      redis:
        condition: service_healthy
      elastic:
        condition: service_healthy
    networks:
      - cocoa-net

  front:
    build: ./front
    container_name: front
    ports:
      - "3000:3000"
    restart: always
    env_file:
      - .env
    environment:
      TZ: Asia/Seoul
    depends_on:
      - back
    networks:
      - cocoa-net

  redis:
    image: redis:7-alpine
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      retries: 5
      start_period: 1s
      timeout: 10s
    restart: always
    environment:
      TZ: Asia/Seoul
    expose:
      - "6379"
    volumes:
      - redis-data:/data
    networks:
      - cocoa-net

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.3
    container_name: elastic
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 5s
      retries: 60
      start_period: 5s
      timeout: 10s
    restart: always
    environment:
      discovery.type: single-node
      TZ: Asia/Seoul
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      bootstrap.memory_lock: true
      xpack.security.enabled: false
      xpack.security.http.ssl.enabled: false
      xpack.security.transport.ssl.enabled: false
    expose:
      - "9200"
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    networks:
      - cocoa-net

networks:
  cocoa-net:
    driver: bridge
volumes:
  redis-data:
  elastic-data:
